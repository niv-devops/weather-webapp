name: Python weather webapp

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Python 3.12
      uses: actions/setup-python@v5.2.0
      with:
        python-version: 3.12

    - name: Run Gitleaks
      uses: gitleaks/gitleaks-action@v2.3.6
      env:
        GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pylint
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      if: github.event_name == 'push'
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Analysing the code with pylint
      if: github.event_name == 'push'
      run: pylint --fail-under=8 $(git ls-files '*.py')

    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/python@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=critical
      
    #- name: Set up Node.js
     # uses: actions/setup-node@v4.0.4
      #with:
      #  node-version: 20

    #- name: Install Snyk CLI
    #  run: npm install -g snyk

    #- name: Run Snyk to check for vulnerabilities in project
     # run: |
       # snyk auth ${{ secrets.SNYK_TOKEN }}
        #snyk test Dockerfile --severity-threshold=critical

    #- name: Test with pytest
    #  run: |
    #    pytest tests/

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build Image
      id: build_image
      uses: redhat-actions/buildah-build@v2
      with:
        image: weather-webapp
        tags: latest ${{ github.sha }}
        containerfiles: Dockerfile

    - name: Run Snyk to check for vulnerabilities in container
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: ${{ github.actor }}/weather-webapp:latest
        args: --threshold=critical
      
    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.6.0
        
    - name: Sign the Image
      run: |
        echo "${{ secrets.COSIGN_KEY }}" > cosign.key
        cosign sign --key cosign.key weather-webapp:latest

    - name: Verify the Image
      run: |
        echo "${{ secrets.COSIGN_PUBLIC_KEY }}" > cosign.pub
        cosign verify --key cosign.pub weather-webapp:latest

    - name: Push To GHCR
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build_image.outputs.image }}
        tags: ${{ steps.build_image.outputs.tags }}
        registry: ghcr.io/${{ github.repository_owner }}
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}
 
  monitor:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Post to a Slack channel
      id: slack
      uses: slackapi/slack-github-action@v1.27.0
      with:
        channel-id: 'C07PEEVQ5JS'
        slack-message: "GitHub workflow result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
